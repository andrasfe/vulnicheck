# Dangerous Commands Configuration with Risk Levels
# Format: category.pattern = pattern|risk_level|description
# Risk Levels: BLOCKED, HIGH_RISK, REQUIRES_APPROVAL, LOW_RISK
#
# BLOCKED: Always blocked, no exceptions
# HIGH_RISK: Requires explicit approval with strong justification
# REQUIRES_APPROVAL: Requires approval but may be legitimate
# LOW_RISK: Logged but allowed (for future use)

# File System - Always Blocked
filesystem.rm_rf_root = rm -rf /|BLOCKED|Destroy entire filesystem
filesystem.rm_rf_etc = rm -rf /etc|BLOCKED|Destroy system configuration
filesystem.dd_root = dd.*of=/dev/[sh]da$|BLOCKED|Overwrite entire disk
filesystem.format_root = mkfs.*/dev/[sh]da$|BLOCKED|Format system disk

# File System - High Risk (Requires Strong Justification)
filesystem.rm_rf_home = rm -rf /home|HIGH_RISK|Delete all user data
filesystem.rm_rf_usr = rm -rf /usr|HIGH_RISK|Delete system programs
filesystem.rm_rf_var = rm -rf /var|HIGH_RISK|Delete system data and logs

# File System - Requires Approval
filesystem.rm_recursive = rm -r|REQUIRES_APPROVAL|Delete directory recursively
filesystem.rm_force = rm -f|REQUIRES_APPROVAL|Force delete files
filesystem.dd_device = dd.*of=/dev/|REQUIRES_APPROVAL|Write directly to device
filesystem.shred = shred|REQUIRES_APPROVAL|Securely delete file

# Sensitive Paths - Always Blocked
path.shadow = /etc/shadow|BLOCKED|System password hashes
path.private_keys = /.*\\.ssh/id_[rd]sa$|BLOCKED|SSH private keys
path.aws_creds = ~/.aws/credentials|BLOCKED|AWS credentials

# Sensitive Paths - High Risk
path.etc = /etc/|HIGH_RISK|System configuration directory
path.root = /root/|HIGH_RISK|Root user home directory
path.ssh = /.ssh/|HIGH_RISK|SSH configuration directory

# Sensitive Paths - Requires Approval
path.env = \\.env|REQUIRES_APPROVAL|Environment configuration file
path.config = config.*\\.(json|yaml|yml)|REQUIRES_APPROVAL|Configuration files
path.secrets = secrets|REQUIRES_APPROVAL|Files containing secrets

# Privilege Escalation - Always Blocked
privilege.sudo_su = sudo su|BLOCKED|Unrestricted root shell
privilege.sudo_bash = sudo.*bash|BLOCKED|Root bash shell
privilege.su_root = su - root|BLOCKED|Switch to root

# Privilege Escalation - High Risk
privilege.sudo = sudo|HIGH_RISK|Run command as root
privilege.chmod_777 = chmod 777|HIGH_RISK|Make world-writable
privilege.chown_root = chown root|HIGH_RISK|Change ownership to root

# Privilege Escalation - Requires Approval
privilege.chmod_exec = chmod \\+x|REQUIRES_APPROVAL|Make file executable
privilege.setuid = chmod [ug]\\+s|REQUIRES_APPROVAL|Set SUID/SGID bit

# System Modification - Always Blocked
system.init_0 = init 0|BLOCKED|Shutdown system
system.rm_boot = rm.*/boot/|BLOCKED|Delete boot files
system.systemctl_disable_ssh = systemctl disable ssh|BLOCKED|Disable SSH

# System Modification - High Risk
system.shutdown = shutdown|HIGH_RISK|Shutdown system
system.reboot = reboot|HIGH_RISK|Reboot system
system.systemctl_stop = systemctl stop|HIGH_RISK|Stop system service

# System Modification - Requires Approval
system.systemctl_restart = systemctl restart|REQUIRES_APPROVAL|Restart service
system.service_restart = service.*restart|REQUIRES_APPROVAL|Restart service
system.kill = kill -9|REQUIRES_APPROVAL|Force kill process

# Network - Always Blocked
network.reverse_shell = (nc|netcat).*-e.*/bin/|BLOCKED|Reverse shell
network.curl_sudo = curl.*\\|.*sudo|BLOCKED|Pipe to sudo
network.wget_root = wget.*--output-document=/|BLOCKED|Overwrite system files

# Network - High Risk
network.curl_bash = curl.*\\|.*bash|HIGH_RISK|Execute remote script
network.wget_sh = wget.*\\|.*sh|HIGH_RISK|Execute remote script

# Network - Requires Approval
network.curl_download = curl.*-o|REQUIRES_APPROVAL|Download file
network.wget_download = wget.*-O|REQUIRES_APPROVAL|Download file
network.git_clone = git clone|REQUIRES_APPROVAL|Clone repository

# Database - Always Blocked
database.drop_all = DROP DATABASE .*\\*|BLOCKED|Drop all databases
database.grant_all_privileges = GRANT ALL PRIVILEGES.*\\*\\.\\*|BLOCKED|Grant all privileges

# Database - High Risk
database.drop_database = DROP DATABASE|HIGH_RISK|Delete entire database
database.drop_table = DROP TABLE|HIGH_RISK|Delete database table
database.truncate = TRUNCATE|HIGH_RISK|Delete all table data

# Database - Requires Approval
database.delete_where = DELETE FROM.*WHERE|REQUIRES_APPROVAL|Delete specific records
database.update_where = UPDATE.*SET.*WHERE|REQUIRES_APPROVAL|Update records
database.alter_table = ALTER TABLE|REQUIRES_APPROVAL|Modify table structure

# Package Management - High Risk
package.apt_remove = apt.*remove|HIGH_RISK|Remove system package
package.pip_uninstall = pip.*uninstall|HIGH_RISK|Uninstall Python package

# Package Management - Requires Approval
package.apt_install = apt.*install|REQUIRES_APPROVAL|Install system package
package.pip_install = pip.*install|REQUIRES_APPROVAL|Install Python package
package.npm_install = npm.*install|REQUIRES_APPROVAL|Install Node package

# Command Execution - Always Blocked
command.eval_exec = (eval|exec)\\(.*\\)|BLOCKED|Dynamic code execution
command.pickle_loads = pickle\\.loads|BLOCKED|Unsafe deserialization

# Command Execution - High Risk
command.subprocess_shell = shell=True|HIGH_RISK|Shell command execution
command.os_system = os\\.system|HIGH_RISK|System command execution

# Command Execution - Requires Approval
command.subprocess_run = subprocess\\.run|REQUIRES_APPROVAL|Run subprocess
command.popen = Popen|REQUIRES_APPROVAL|Create subprocess

# Blocked Server Names
server.system = system|BLOCKED|System server access
server.admin = admin|BLOCKED|Admin server access
server.root = root|BLOCKED|Root server access
